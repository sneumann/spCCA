on:
  workflow_dispatch:
  
name: Quick tests of devel actions

env:
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

jobs:

  pkg-in-subfolder:
    name: Test bioc-actions - ${{ matrix.pkg }}
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-20.04, windows-2022, macos-11]
        os: [ubuntu-20.04]
        bioc-version: [release]
        pkg: ['.']

    runs-on: ${{ matrix.os }}
    container: bioconductor/bioconductor_docker:devel

    steps:
    
      - uses: actions/checkout@v4
      
      - name: Setup R and Bioconductor
        uses: grimbough/bioc-actions/setup-bioc@devel
        with:
          bioc-version: ${{ matrix.bioc-version }}
          bioc-mirror: https://ftp.gwdg.de/pub/misc/bioconductor
          use-public-rspm: false
      
      - name: Install dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache-version: 1
          
      - name: Build, Install, Check
        id: build-install-check
        uses: grimbough/bioc-actions/build-install-check@devel
        with:
          package-directory: ${{ matrix.pkg }}
      
      ## Turn off the checks that we know will fail
      ## Cause the workflow to error if any new errors appear
      - name: Run BiocCheck with arguments
        uses: grimbough/bioc-actions/run-BiocCheck@devel
        with:
          package-directory: ${{ matrix.pkg }}
          arguments: '--no-check-bioc-views --no-check-vignettes --no-check-bioc-help'
          error-on: 'error'

      ## upload some results files
      - name: Upload check output
        uses: actions/upload-artifact@v3
        with:
          name: docker-results
          path: |
            ${{ steps.build-install-check.outputs.check-dir }}
            ${{ steps.build-install-check.outputs.source-tarball }}
            ${{ steps.build-install-check.outputs.package-binary }}

      - name: Upload install log if that step fails
        if: always() && (steps.build-install-check.outcome == 'failure')
        uses: actions/upload-artifact@v3
        with: 
          name: install-log
          path: |
            ${{ steps.build-install-check.outputs.install-log }}
