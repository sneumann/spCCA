[{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"See [1].","code":""},{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"datasets","dir":"Articles","previous_headings":"","what":"Datasets","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"reduced data sets excluding features low variance (threshold chosen σ < 1 genes σ < 0.4 metabolites), resulting 72 × 252 LC/MS signal intensity matrix (X), 72 × 1277 gene expression matrix (Y).","code":"MTBLS18_path <- system.file(\"arXiv.1405.1534\", \"MTBLS18.csv\",                              package = \"spCCA\") EMTAB3287_path <- system.file(\"arXiv.1405.1534\", \"E-MTAB-3287.csv\",                                  package = \"spCCA\") SAMEG179892_path <- system.file(\"arXiv.1405.1534\", \"SAMEG179892.csv\",                                      package = \"spCCA\")  ## Nicer order of the design factors  classorder <- rev(c(\"Pinf\",                 \"GL1\",\"Pen2Alone\",\"Erp1\",\"Erp2\",\"D\",                 \"DayNight\",                 \"Replicate2\",\"Replicate3\",\"Pinf.Culture3\",\"Pinf.Culture2\"))  X <- as.matrix(read.csv(MTBLS18_path, row.names = 1)) Y <- as.matrix(read.csv(EMTAB3287_path, row.names = 1)) Z <- as.matrix(read.csv(SAMEG179892_path, row.names = 1))[,classorder]  ## Enforce same sample names, re-using Metabolomics sample names rownames(Z) <- rownames(Y) <- rownames(X)"},{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"data-visualisation","dir":"Articles","previous_headings":"Datasets","what":"Data visualisation","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"Show graphical representation experimental design factors. , check distribution values biological data sets. TODO: double check x position samples actual factor levels experiments/samples.","code":"plot(Z[,\"DayNight\"]*0.9, main=\"Experimental Design Factors\", type=\"s\",       xlab=\"Sample\", ylab=\"\",      ylim=c(0,ncol(Z)), xaxt=\"n\", yaxt=\"n\") axis(1, at=seq(0, along=rownames(X)), labels=rownames(X),       las=2, cex.axis=1/(nrow(Z)/25)) axis(2, at=seq(0, along=colnames(Z)), labels=colnames(Z),       las=2, cex.axis=0.6)  abline(v=seq(6.5, along=rownames(X), by=6), col=\"grey\", lty=2) abline(v=seq(12.5, along=rownames(X), by=12), col=\"grey\", lty=1)  i<-0 dummy <- sapply(colnames(Z), function(f) { lines(Z[,f]*0.9+i, col=i, type=\"s\"); i<<-i+1 }) hist(X, freq=FALSE, main=\"Metabolites\", xlab=\"Intensity\", ylab=\"Density\") lines(density(X), col=\"blue\") hist(Y, freq=FALSE, main=\"Transcripts\", xlab=\"Intensity\", ylab=\"Density\") lines(density(Y), col=\"blue\")"},{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"spcca","dir":"Articles","previous_headings":"","what":"spCCA","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"Unsure perform “ten-fold repeated hold-sampling” mentioned paper. higher lambdas, sparse canonical variables . parameters lambda grid search depend number features (rows) data matrices. end value inverse proportional number features. metabolomics data n=252 rows, end value 1.0 good value. transcriptomics data n=1277 rows, end value 0.2 good value. design matrix n=11 design factors, end value 2.0 good value. step size inverse proportional number features. metabolomics data n=252 rows, step size 0.05 good value. transcriptomics data n=1277 rows, step size 0.01 slightly smaller good value. design matrix n=11 design factors, step size 0.1 good value. step size 0.01 good number sets 1000 features","code":"numCV <- 6 # number of canonical variables to calculate  # Define the grid size based on manpage end  <- c(1.0,  0.2,  2.0) step <- c(0.05, 0.01, 0.1)  CCA3 <- getCCA3(X=X, Y=Y, Z=Z,                  numCV=numCV,                 end=end, step=step,                 n.r = 5, ## number of repeats, increase to 10 when parameters are stable                 max.counter.test = 5 ## number of random start vectors for iteration, increase to 10-20 when parameters are stable                 )    #CCA3 <- getCCA3(X=X, Y=Y, Z=Z, numCV=9, end=end, step=step)"},{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"correlation-of-canonical-variables","dir":"Articles","previous_headings":"spCCA","what":"Correlation of canonical variables","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"correlation canonical variables measure well experimental design explains experimental data. sharp drop values can hint use fewer canonical variables. Unsure get significance threshold, must somewhere get.best.lambdas().","code":"#plot(CCA3$corr, type=\"l\") ggplot(data=data.frame(x=seq(along=CCA3$corr), y=CCA3$corr),         mapping=aes(x = x, y = y)) +   geom_line() +   geom_point() plotCCA(CCA3, X, Y, filename = NULL, legend=c(\"metabolites\", \"genes\", \"design\"))"},{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"details-of-canonical-variables","dir":"Articles","previous_headings":"spCCA","what":"Details of canonical variables","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"","code":"numCV <- 1 topN <- 1:10  kable(CCA3$cc3.weight.z[order(abs(CCA3$cc3.weight.z[,numCV]), decreasing=TRUE)[topN], numCV],       digits=3) %>% kable_styling(full_width = F, position = \"left\") kable(CCA3$cc3.weight.x[order(abs(CCA3$cc3.weight.x[,numCV]), decreasing=TRUE)[topN], numCV],       digits=3) %>% kable_styling(full_width = F, position = \"center\") kable(CCA3$cc3.weight.y[order(abs(CCA3$cc3.weight.y[,numCV]), decreasing=TRUE)[topN], numCV],       digits=3) %>% kable_styling(full_width = F, position = \"right\")"},{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"join-the-tidyverse","dir":"Articles","previous_headings":"spCCA","what":"Join the tidyverse","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"","code":"# Combine the lists into a single data frame  canVars = as.tibble(cbind(canVar=seq(along=CCA3$corr), corr = CCA3$corr)) ## Warning: `as.tibble()` was deprecated in tibble 2.0.0. ## ℹ Please use `as_tibble()` instead. ## ℹ The signature and semantics have changed, see `?as_tibble`. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. lambdas <- data.frame(matrix=c(\"X\", \"Y\", \"Z\")[seq_along(rownames(CCA3$lambda))],                  CCA3$lambda) colnames(lambdas) <- c(\"matrix\", seq(1,ncol(lambdas)-1))  # convert lambdas from wide to long tibble lambdas_long <- pivot_longer(as_tibble(lambdas),                               cols=seq(2,ncol(lambdas)),                              names_to=\"canVar\",                              names_transform = list(canVar = as.integer),                              values_to=\"lambda\")   # Convert the data frame to a tibble combined_tibble <- inner_join(canVars, lambdas_long, by=\"canVar\")  # Print the tibble print(combined_tibble) ## # A tibble: 18 × 4 ##    canVar  corr matrix lambda ##     <dbl> <dbl> <chr>   <dbl> ##  1      1 0.945 X        0.25 ##  2      1 0.945 Y        0.07 ##  3      1 0.945 Z        0.1  ##  4      2 0.956 X        0.2  ##  5      2 0.956 Y        0.09 ##  6      2 0.956 Z        0    ##  7      3 0.939 X        0.2  ##  8      3 0.939 Y        0.08 ##  9      3 0.939 Z        0.2  ## 10      4 0.895 X        0.2  ## 11      4 0.895 Y        0.1  ## 12      4 0.895 Z        0.1  ## 13      5 0.829 X        0.2  ## 14      5 0.829 Y        0.14 ## 15      5 0.829 Z        0    ## 16      6 0.865 X        0.3  ## 17      6 0.865 Y        0.1  ## 18      6 0.865 Z        0.4"},{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"join-the-tidyverse-1","dir":"Articles","previous_headings":"spCCA","what":"Join the tidyverse","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"","code":"canVarX <- data.frame(matrix=\"X\", sampleName=rownames(CCA3$cc3.CV.x), CCA3$cc3.CV.x) colnames(canVarX) <- c(\"matrix\", \"sampleName\", seq(1,ncol(canVarX)-2))  canVarY <- data.frame(matrix=\"Y\", sampleName=rownames(CCA3$cc3.CV.y), CCA3$cc3.CV.y) colnames(canVarY) <- c(\"matrix\", \"sampleName\", seq(1,ncol(canVarY)-2))  canVarZ <- data.frame(matrix=\"Z\", sampleName=rownames(CCA3$cc3.CV.z), CCA3$cc3.CV.z) colnames(canVarZ) <- c(\"matrix\", \"sampleName\", seq(1,ncol(canVarZ)-2))  canVar <- rbind(canVarX, canVarY, canVarZ)  canVar_long <- pivot_longer(as.tibble(canVar),                              cols=seq(3,ncol(canVar)),                         names_to=\"canVar\",                         names_transform = list(canVar = as.integer))  ## ggplot canVar_long for each matrix for canVar==1 ggplot(data=canVar_long %>% filter(canVar==1),         mapping=aes(x = sampleName, y = value, color=matrix, group=matrix)) +   geom_step(direction = \"mid\") +   geom_point() +   theme(axis.text.x = element_text(angle = 90, hjust = 1))"},{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"join-the-tidyverse-2","dir":"Articles","previous_headings":"spCCA","what":"Join the tidyverse","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"","code":"weightsX <- data.frame(matrix=\"X\", featureName=rownames(CCA3$cc3.weight.x), CCA3$cc3.weight.x) colnames(weightsX) <- c(\"matrix\", \"featureName\", seq(1,ncol(weightsX)-2))  weightsY <- data.frame(matrix=\"Y\", featureName=rownames(CCA3$cc3.weight.y), CCA3$cc3.weight.y) colnames(weightsY) <- c(\"matrix\", \"featureName\", seq(1,ncol(weightsY)-2))  weightsZ <- data.frame(matrix=\"Z\", featureName=rownames(CCA3$cc3.weight.z), CCA3$cc3.weight.z) colnames(weightsZ) <- c(\"matrix\", \"featureName\", seq(1,ncol(weightsZ)-2))  weights <- rbind(weightsX, weightsY, weightsZ)  weights_long <- pivot_longer(as.tibble(weights),                              cols=seq(3,ncol(weights)),                         names_to=\"canVar\",                         names_transform = list(canVar = as.integer))  values <- as.tibble(bind_rows(data.frame(matrix=\"X\", featureName=colnames(X), t(X)),                   data.frame(matrix=\"Y\", featureName=colnames(Y), t(Y)),                 data.frame(matrix=\"Z\", featureName=colnames(Z), t(Z))))   values_long <- pivot_longer(values,                              cols=seq(3,ncol(values)),                              names_to=\"sampleName\")  ## for each matrix, for each canVar, obtain the featureNames of the features with the hightest weights topN <- 2 topFeatures <- weights_long %>% filter(matrix != \"Z\") %>%   group_by(matrix, canVar) %>%    top_n(topN, abs(value)) %>%    arrange(matrix, canVar, desc(abs(value)))  ## for Each topFeature, multiply the corresponding value_long with the weight topFeatures_values <- inner_join(topFeatures %>% filter(canVar==1),                                   values_long, by=c(\"matrix\", \"featureName\")) %>%    mutate(weightedValue = value.x*value.y)  ## ggplot topFeatures_values for each matrix for canVar==1 ggplot(data=topFeatures_values,         mapping=aes(x = sampleName, y = weightedValue, color=featureName, group=featureName)) +   geom_step(direction = \"mid\") +   geom_point() +   theme(axis.text.x = element_text(angle = 90, hjust = 1))"},{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"saving-results","dir":"Articles","previous_headings":"spCCA","what":"Saving results","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"","code":"save.CCA(CCA3, file=\"CCA3\")"},{"path":[]},{"path":"https://sneumann.github.io/spCCA/articles/spCCA.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Supervised Penalized Canonical Correlation Analysis with the spCCA package","text":"","code":"## R version 4.3.3 (2024-02-29) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Ubuntu 24.04.1 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.12.0  ## LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.12.0 ##  ## locale: ##  [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     ##  [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    ##  [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: Europe/Berlin ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ##  [1] kableExtra_1.4.0 knitr_1.48       lubridate_1.9.3  forcats_1.0.0    ##  [5] stringr_1.5.1    dplyr_1.1.4      purrr_1.0.2      readr_2.1.5      ##  [9] tidyr_1.3.1      tibble_3.2.1     ggplot2_3.5.1    tidyverse_2.0.0  ## [13] spCCA_0.1.6      BiocStyle_2.30.0 ##  ## loaded via a namespace (and not attached): ##  [1] gtable_0.3.6        xfun_0.48           bslib_0.8.0         ##  [4] tzdb_0.4.0          vctrs_0.6.5         tools_4.3.3         ##  [7] generics_0.1.3      fansi_1.0.6         highr_0.11          ## [10] pkgconfig_2.0.3     desc_1.4.3          lifecycle_1.0.4     ## [13] compiler_4.3.3      farver_2.1.2        textshaping_0.3.7   ## [16] munsell_0.5.1       codetools_0.2-19    htmltools_0.5.8.1   ## [19] sass_0.4.9          yaml_2.3.10         pillar_1.9.0        ## [22] pkgdown_2.0.7       crayon_1.5.3        jquerylib_0.1.4     ## [25] MASS_7.3-60.0.1     cachem_1.1.0        tidyselect_1.2.1    ## [28] digest_0.6.37       stringi_1.8.4       bookdown_0.37       ## [31] labeling_0.4.3      fastmap_1.2.0       grid_4.3.3          ## [34] colorspace_2.1-1    cli_3.6.3           magrittr_2.0.3      ## [37] utf8_1.2.4          withr_3.0.2         scales_1.3.0        ## [40] timechange_0.3.0    rmarkdown_2.28      ragg_1.2.7          ## [43] hms_1.1.3           memoise_2.0.1       evaluate_1.0.1      ## [46] viridisLite_0.4.2   rlang_1.1.4         glue_1.8.0          ## [49] BiocManager_1.30.25 xml2_1.3.6          svglite_2.1.3       ## [52] rstudioapi_0.15.0   jsonlite_1.8.9      R6_2.5.1            ## [55] systemfonts_1.0.5   fs_1.6.4"},{"path":"https://sneumann.github.io/spCCA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Steffen Neumann. Maintainer.","code":""},{"path":"https://sneumann.github.io/spCCA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Thum , Neumann S, Posch S (2025). spCCA: supervised penalized CCA three data sets (2 biological, 1 design). R package version 0.1.6, https://sneumann.github.io/spCCA/.","code":"@Manual{,   title = {spCCA: supervised penalized CCA for three data sets (2 biological, 1 design)},   author = {Andrea Thum and Steffen Neumann and Stefan Posch},   year = {2025},   note = {R package version 0.1.6},   url = {https://sneumann.github.io/spCCA/}, }"},{"path":"https://sneumann.github.io/spCCA/index.html","id":"low-level-infrastructure-to-handle-ms-spectra","dir":"","previous_headings":"","what":"supervised penalized CCA for three data sets (2 biological, 1 design)","title":"supervised penalized CCA for three data sets (2 biological, 1 design)","text":"spCCA package combines sparse (penalized) CCA two biological data sets third data set, experimental design tries find correlations biological data sets design data set, well-explainable. information see package homepage.","code":""},{"path":"https://sneumann.github.io/spCCA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"supervised penalized CCA for three data sets (2 biological, 1 design)","text":"package can installed ","code":"install.packages(\"devtools\") devtools::install_github(\"sneumann/spCCA\")"},{"path":"https://sneumann.github.io/spCCA/reference/addPattern.html","id":null,"dir":"Reference","previous_headings":"","what":"cluster weight vectors by assigning them to one pattern\nThe addPattern function clusters weight vectors by assigning them to one pattern \nin the given list. It checks if the mean cluster vector is similar to a new z.vector, \nand makes a new cluster if not similar to any existing cluster, \ncounts the number of vectors associated with one cluster, \nand saves the correlation for the cluster. \nThe function returns the updated list of patterns. — addPattern","title":"cluster weight vectors by assigning them to one pattern\nThe addPattern function clusters weight vectors by assigning them to one pattern \nin the given list. It checks if the mean cluster vector is similar to a new z.vector, \nand makes a new cluster if not similar to any existing cluster, \ncounts the number of vectors associated with one cluster, \nand saves the correlation for the cluster. \nThe function returns the updated list of patterns. — addPattern","text":"addPattern function called within get.best.lambdas","code":""},{"path":"https://sneumann.github.io/spCCA/reference/addPattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cluster weight vectors by assigning them to one pattern\nThe addPattern function clusters weight vectors by assigning them to one pattern \nin the given list. It checks if the mean cluster vector is similar to a new z.vector, \nand makes a new cluster if not similar to any existing cluster, \ncounts the number of vectors associated with one cluster, \nand saves the correlation for the cluster. \nThe function returns the updated list of patterns. — addPattern","text":"","code":"addPattern(List.Pattern, corr, xyz.vector, z.vector)"},{"path":"https://sneumann.github.io/spCCA/reference/addPattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cluster weight vectors by assigning them to one pattern\nThe addPattern function clusters weight vectors by assigning them to one pattern \nin the given list. It checks if the mean cluster vector is similar to a new z.vector, \nand makes a new cluster if not similar to any existing cluster, \ncounts the number of vectors associated with one cluster, \nand saves the correlation for the cluster. \nThe function returns the updated list of patterns. — addPattern","text":"List.Pattern list existing patterns. corr (STN: LLM says:) correlation value. xyz.vector (STN: LLM says:) combined vector x, y, z-weight. z.vector vector comparison find create clusters","code":""},{"path":"https://sneumann.github.io/spCCA/reference/addPattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cluster weight vectors by assigning them to one pattern\nThe addPattern function clusters weight vectors by assigning them to one pattern \nin the given list. It checks if the mean cluster vector is similar to a new z.vector, \nand makes a new cluster if not similar to any existing cluster, \ncounts the number of vectors associated with one cluster, \nand saves the correlation for the cluster. \nThe function returns the updated list of patterns. — addPattern","text":"List cluster items:   item [[1]]: correlation   item [[2]]: combined vector x, y, z-weight   item [[3]]: counter number vectors cluster","code":""},{"path":"https://sneumann.github.io/spCCA/reference/comparePattern.html","id":null,"dir":"Reference","previous_headings":"","what":"compare patterns of two eigenvectors — comparePattern","title":"compare patterns of two eigenvectors — comparePattern","text":"return manhattan (default) euklidean distance","code":""},{"path":"https://sneumann.github.io/spCCA/reference/comparePattern.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compare patterns of two eigenvectors — comparePattern","text":"","code":"comparePattern(x, y, dm = c(\"manhattan\", \"euklidean\"))"},{"path":"https://sneumann.github.io/spCCA/reference/comparePattern.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compare patterns of two eigenvectors — comparePattern","text":"x, y vectors compare dm distance measure, default manhattan","code":""},{"path":"https://sneumann.github.io/spCCA/reference/comparePattern.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compare patterns of two eigenvectors — comparePattern","text":"manhattan distance default; distances possible","code":""},{"path":"https://sneumann.github.io/spCCA/reference/get.best.lambdas.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate supervised CCA on three data matrices — get.best.lambdas","title":"Calculate supervised CCA on three data matrices — get.best.lambdas","text":"Calculate correlaion coefficients sparse CCA combinations lambdas (grid search).","code":""},{"path":"https://sneumann.github.io/spCCA/reference/get.best.lambdas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate supervised CCA on three data matrices — get.best.lambdas","text":"","code":"get.best.lambdas(X,Y,Z, start=c(0,0,0), end=c(0.2,0.2,2), step=c(0.02,0.02,0.2),  n.r=10, max.counter.test=10)"},{"path":"https://sneumann.github.io/spCCA/reference/get.best.lambdas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate supervised CCA on three data matrices — get.best.lambdas","text":"X, Y, Z data matrices, Z supposed design data set start vector three numbers data sets X, Y Z; starting points grid search lambdas. end vector three numbers data sets X, Y Z; ending points grid search lambdas. step vector three numbers data sets X, Y Z; step size grid search lambdas n.r number resampling runs max.counter.test number random start vectors iteration","code":""},{"path":"https://sneumann.github.io/spCCA/reference/get.best.lambdas.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate supervised CCA on three data matrices — get.best.lambdas","text":"Adequate numbers grid search depend data set size. starting point 0.0 recommended, equivalent sparsity. Depending number features, 1000 features, ending point 0.25 high enough, 10 features like 2. step size 0.01 good number sets 1000 features, 0.1 10 features. good resampling quality set n.r ten. higher number random start vectors, better. Depending instability data set 5 20 good.","code":""},{"path":"https://sneumann.github.io/spCCA/reference/get.best.lambdas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate supervised CCA on three data matrices — get.best.lambdas","text":"best.lambda.x, best.lambda.y, best.lambda.z optimal lambdas three data sets. corr best test set correlation best vector bestVector vector; three eigenvectors x, y, z best correlation concatenated","code":""},{"path":"https://sneumann.github.io/spCCA/reference/get.best.lambdas.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate supervised CCA on three data matrices — get.best.lambdas","text":"Andrea Thum, Elena Parkhomenko","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://sneumann.github.io/spCCA/reference/getCCA3.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate supervised CCA on three data matrices — getCCA3","title":"Calculate supervised CCA on three data matrices — getCCA3","text":"getCCA3 starts supervised sparse CCA elastic net 2 biological data sets 1 design data set Z. Data sets X Y strongly regularized (ridge regression); Z neccessary (det(Z)==0).","code":""},{"path":"https://sneumann.github.io/spCCA/reference/getCCA3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate supervised CCA on three data matrices — getCCA3","text":"","code":"getCCA3(X,Y,Z, end=c(0.3,0.5,3), step=c(0.01,0.01,0.2), numCV=10, n.r=10, max.counter.test=10)"},{"path":"https://sneumann.github.io/spCCA/reference/getCCA3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate supervised CCA on three data matrices — getCCA3","text":"X biological data set dim(X): n rows, p features Y biological data set dim(Y): n rows, q features Z design data set dim(Z): n rows, r features; describes experimental design binary vectors end vector containing three maximal lambda-values grid search step vector containing step size grid search lambdas numCV number canonical variables, calculated n.r number resampling runs, 10 okay max.counter.test number random start vectors","code":""},{"path":[]},{"path":"https://sneumann.github.io/spCCA/reference/getCCA3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate supervised CCA on three data matrices — getCCA3","text":"cc3.weight.x, cc3.weight.y, cc3.weight.z Matrix weights canonical variables data set X, Y Z respectively (columnwise) ccc3.CV.x, ccc3.CV.y, ccc3.CV.z Matrix canonical variables data set X, Y Z respectively (columnwise) corr Vector absolute correlation coefficients canonical variables (columnwise): (corr(cv(X),cv(Z))+ corr(cv(Y),cv(Z))/2 lambda Matrix 3 parameters lambda data set canonical variable (columns) numCV Number canonical variables","code":""},{"path":"https://sneumann.github.io/spCCA/reference/getCCA3.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate supervised CCA on three data matrices — getCCA3","text":"Andrea Thum","code":""},{"path":[]},{"path":[]},{"path":"https://sneumann.github.io/spCCA/reference/plotCCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate supervised CCA on three data matrices — plotCCA","title":"Calculate supervised CCA on three data matrices — plotCCA","text":"Plot canonical variable top two features variable data sets X Y","code":""},{"path":"https://sneumann.github.io/spCCA/reference/plotCCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate supervised CCA on three data matrices — plotCCA","text":"","code":"plotCCA(CCA3, X, Y,filename,legend)"},{"path":"https://sneumann.github.io/spCCA/reference/plotCCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate supervised CCA on three data matrices — plotCCA","text":"CCA3 list results getCCA3 X, Y original biological data matrices without subtraction canonical variables, plots top features filename CCA-project name, used create filename legend names data sets X, Y, Z legend, e.g. c(\"Genes\", \"Metabolites\",\"Design Patterns\")","code":""},{"path":[]},{"path":[]},{"path":"https://sneumann.github.io/spCCA/reference/plotCCA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate supervised CCA on three data matrices — plotCCA","text":"Andrea Thum","code":""},{"path":[]},{"path":[]},{"path":"https://sneumann.github.io/spCCA/reference/save.CCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate supervised CCA on three data matrices — save.CCA","title":"Calculate supervised CCA on three data matrices — save.CCA","text":"Store results current canonical variable file. First row: information lambdas correlation coefficients. Next rows three data sets weight > 0 weight feature name. Weights sorted decreasing order, important features top.","code":""},{"path":"https://sneumann.github.io/spCCA/reference/save.CCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate supervised CCA on three data matrices — save.CCA","text":"","code":"save.CCA(CCA3,filename)"},{"path":"https://sneumann.github.io/spCCA/reference/save.CCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate supervised CCA on three data matrices — save.CCA","text":"CCA3 list results getCCA3 filename filename saving results","code":""},{"path":[]},{"path":[]},{"path":"https://sneumann.github.io/spCCA/reference/save.CCA.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate supervised CCA on three data matrices — save.CCA","text":"Andrea Thum","code":""},{"path":[]},{"path":"https://sneumann.github.io/spCCA/reference/scca.function3Z.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate supervised CCA on three data matrices — scca.function3Z","title":"Calculate supervised CCA on three data matrices — scca.function3Z","text":"Implements modified iterative power method three (regularized) data sets lasso penalty given lasso parameters lambda.{x,y,z}.     Pseudomatrices used input faster calculation.","code":""},{"path":"https://sneumann.github.io/spCCA/reference/scca.function3Z.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate supervised CCA on three data matrices — scca.function3Z","text":"","code":"scca.function3Z(XpZ,YpZ,ZpX,ZpY, dims,lambda.x, lambda.y, lambda.z,max.iter = 500,  shift=2, x.initial=NULL, y.initial=NULL, z.initial=NULL)"},{"path":"https://sneumann.github.io/spCCA/reference/scca.function3Z.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate supervised CCA on three data matrices — scca.function3Z","text":"XpZ, YpZ, ZpX, ZpY regularized pseudomatrix Xp X: regularize(t(X)*X)) * t(X);          XpZ = Xp * Z input. Z design data set. dims dims[1:3]: number features data sets X, Y, Z lambda.x, lambda.y, lambda.z lasso parameters lambda data sets. lambda = 0: sparsity. max.iter number maximal iterations power method. shift start lasso regularization shift iteration steps. x.initial, y.initial, z.initial initial vectors iteration. NULL: filled random values","code":""},{"path":"https://sneumann.github.io/spCCA/reference/scca.function3Z.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate supervised CCA on three data matrices — scca.function3Z","text":"x.new weight vector data set X y.new weight vector data set Y z.new weight vector data set Z number iterations steps convergence null true least one lambda high weights one weight vector zero","code":""},{"path":"https://sneumann.github.io/spCCA/reference/scca.function3Z.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate supervised CCA on three data matrices — scca.function3Z","text":"Andrea Thum, Elena Parkhomenko","code":""},{"path":"https://sneumann.github.io/spCCA/reference/scca.function3Z.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Calculate supervised CCA on three data matrices — scca.function3Z","text":"Test output variable , iteration converge (<max.iter)!","code":""},{"path":[]},{"path":"https://sneumann.github.io/spCCA/reference/spCCA-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Supervised Sparse Canonical Correlation Analysis — spCCA-package","title":"Supervised Sparse Canonical Correlation Analysis — spCCA-package","text":"Obtain Canonical Variables explain correlations data   matrices.","code":""},{"path":"https://sneumann.github.io/spCCA/reference/spCCA-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Supervised Sparse Canonical Correlation Analysis — spCCA-package","text":"Also check Vignette","code":""},{"path":"https://sneumann.github.io/spCCA/reference/spCCA-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Supervised Sparse Canonical Correlation Analysis — spCCA-package","text":"Andrea Thum, Steffen Neumann, Stefan Posch Maintainer: andrea.thum@informatik.uni-halle.de","code":""},{"path":"https://sneumann.github.io/spCCA/reference/spCCA-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Supervised Sparse Canonical Correlation Analysis — spCCA-package","text":"1. Supervised Penalized Canonical Correlation Analysis, Andrea Thum, Lore Westphal, Tilo Lübken, Sabine Rosahl, Steffen Neumann Stefan Posch, unpublished 2. learning algorithm adaptive canonical correlation analysis several data sets, Javier Vía Ignacio Santamaría Jesús Pérez, Neural Networks 2006, volume 20,  pp. 139-152 3. Correlating multiple SNPs multiple disease phenotypes: penalized non-linear canonical correlation analysis, Sandra Waaijenborg Aeilko H. Zwinderman, Bioinformatics 2009, volume 25 (21),  pp. 2764-2771 4. Relations two sets variates, Harold Hotelling, Biometrika 1936, volume 28, pp. 321-377","code":""},{"path":[]},{"path":"https://sneumann.github.io/spCCA/reference/spCCA-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Supervised Sparse Canonical Correlation Analysis — spCCA-package","text":"","code":"X=as.matrix(read.delim(system.file(\"Example/simX.txt\", package = \"spCCA\"))) Y=as.matrix(read.delim(system.file(\"Example/simY.txt\", package = \"spCCA\"))) Z=as.matrix(read.delim(system.file(\"Example/simZ.txt\", package = \"spCCA\")))  CCA3 <- getCCA3(X,Y,Z,numCV=2,  max.counter.test=1, n.r=1)"}]
